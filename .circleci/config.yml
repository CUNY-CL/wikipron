version: 2.1

orbs:
  win: circleci/windows@5.0


jobs:
  pre-build:
    description: A check that needs to be done on only one supported Python version
    parameters:
      command-run:
        type: string
    docker:
      # Use the latest Python 3.x image from CircleCI that WikiPron supports.
      # See: https://circleci.com/developer/images/image/cimg/python
      - image: cimg/python:3.12.1
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          command: pip install -r requirements.txt
      - run:
          command: << parameters.command-run >>

  build-python:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Build source distribution and install package from it
          command: |
              pip install -r requirements.txt && \
              python -m build && \
              pip install dist/`ls dist/ | grep .whl`
      - run:
          name: Show installed Python packages
          command: pip list -v
      - run:
          name: Run python tests
          command: |
              pytest -vv tests --junitxml /tmp/testxml/report.xml
      - store_test_results:
          path: /tmp/testxml/

  build-python-win:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run: systeminfo
      - run:
          name: Run tests on Windows
          shell: bash.exe
          command: |
            python --version && \
            pip install -r requirements.txt && \
            pip install . && \
            pip list && \
            pytest

workflows:
  version: 2
  build-and-test:
    jobs:
      - pre-build:
          name: flake8
          command-run: flake8 --extend-ignore E203 data src tests
      - pre-build:
          name: black
          command-run: black --line-length=79 --check data src tests
      - pre-build:
          name: mypy
          command-run: mypy --install-types --ignore-missing-imports --non-interactive src tests
      - pre-build:
          name: twine
          command-run: |
            python -m build && \
            twine check dist/`ls dist/ | grep .tar.gz` && \
            twine check dist/`ls dist/ | grep .whl`
      - build-python:
          requires:
            - flake8
            - black
            - mypy
            - twine
          matrix:
            parameters:
              python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      - build-python-win:
          requires:
            - flake8
            - black
            - mypy
            - twine
